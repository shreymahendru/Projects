module bomb(CLOCK_50, HEX0, SW, LEDR, LEDG);
input [0:3]SW;
input CLOCK_50;
output [0:6]HEX0;
output [0:3]LEDR;
wire slow_clock;
assign LEGR=SW;
reg second[3:0];
reg [25:0]cntr;

initial 
	begin
	second=9;
	cntr=0;
	end 
always @(posedge CLOCK_50)
begin 
	if(~SW[0] & SW[1]) //sw0 for reset and sw1 to stop clock 
	begin
		cntr=cntr+1;
		if(cntr>=50000000)
		begin
		second=second-1;
		cntr = 0;
		end
	else 
	begin
		second=9;
		cntr=0;
	end
end	
if (second == 0) 

hex_display(second, HEX0);

		
		
		


endmodule

//module slow(clk, slow_clk);
//input clk;
//output slow_clk;
//reg cntr[25:0];
//initial  cntr=0;
// always @ (posedge clk)
// begin
// 
 